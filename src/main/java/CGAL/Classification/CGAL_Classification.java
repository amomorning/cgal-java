/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Classification;

import CGAL.Kernel.Point_3;
import CGAL.Kernel.Vector_3;
import CGAL.Point_set_3.Point_set_3;
import CGAL.Point_set_3.Point_set_3_Int_map;
import CGAL.Point_set_3.Point_set_3_Vector_map;
import CGAL.Point_set_3.Point_set_3_Int_iterator;
import java.util.Iterator;
import java.util.Collection;

public class CGAL_Classification {
  public static void classify(Point_set_3 point_set, Label_set labels, ETHZ_Random_forest_classifier classifier, Point_set_3_Int_map output) {
    CGAL_ClassificationJNI.classify(Point_set_3.getCPtr(point_set), point_set, Label_set.getCPtr(labels), labels, ETHZ_Random_forest_classifier.getCPtr(classifier), classifier, Point_set_3_Int_map.getCPtr(output), output);
  }

  public static void classify_with_local_smoothing(Point_set_3 point_set, Label_set labels, ETHZ_Random_forest_classifier classifier, Point_set_neighbor_query neighbor_query, Point_set_3_Int_map output) {
    CGAL_ClassificationJNI.classify_with_local_smoothing(Point_set_3.getCPtr(point_set), point_set, Label_set.getCPtr(labels), labels, ETHZ_Random_forest_classifier.getCPtr(classifier), classifier, Point_set_neighbor_query.getCPtr(neighbor_query), neighbor_query, Point_set_3_Int_map.getCPtr(output), output);
  }

  public static void classify_with_graphcut(Point_set_3 point_set, Label_set labels, ETHZ_Random_forest_classifier classifier, Point_set_neighbor_query neighbor_query, double strength, int min_number_of_subdivisions, Point_set_3_Int_map output) {
    CGAL_ClassificationJNI.classify_with_graphcut(Point_set_3.getCPtr(point_set), point_set, Label_set.getCPtr(labels), labels, ETHZ_Random_forest_classifier.getCPtr(classifier), classifier, Point_set_neighbor_query.getCPtr(neighbor_query), neighbor_query, strength, min_number_of_subdivisions, Point_set_3_Int_map.getCPtr(output), output);
  }

}
