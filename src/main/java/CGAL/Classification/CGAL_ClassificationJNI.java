/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package CGAL.Classification;

import CGAL.Kernel.Point_3;
import CGAL.Kernel.Vector_3;
import CGAL.Point_set_3.Point_set_3;
import CGAL.Point_set_3.Point_set_3_Int_map;
import CGAL.Point_set_3.Point_set_3_Vector_map;
import CGAL.Point_set_3.Point_set_3_Int_iterator;
import java.util.Iterator;
import java.util.Collection;

public class CGAL_ClassificationJNI {

    static {
      try {
          System.loadLibrary("CGAL_Classification");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Classification failed to load. \n" + e);
        throw e;
      }
    }
  

    static{
      try {
          System.loadLibrary("CGAL_Java");
      } catch (UnsatisfiedLinkError e) {
        System.err.println("Native code library CGAL_Java failed to load. \n" + e);
        throw e;
      }
    }
  
  public final static native long new_Label(long jarg1);
  public final static native String Label_name(long jarg1, Label jarg1_);
  public final static native void delete_Label(long jarg1);
  public final static native long new_Label_set();
  public final static native long Label_set_add(long jarg1, Label_set jarg1_, String jarg2);
  public final static native boolean Label_set_remove(long jarg1, Label_set jarg1_, long jarg2, Label jarg2_);
  public final static native void Label_set_clear(long jarg1, Label_set jarg1_);
  public final static native void delete_Label_set(long jarg1);
  public final static native long new_Feature(long jarg1);
  public final static native String Feature_name(long jarg1, Feature jarg1_);
  public final static native void Feature_set_name(long jarg1, Feature jarg1_, String jarg2);
  public final static native double Feature_value(long jarg1, Feature jarg1_, int jarg2);
  public final static native void delete_Feature(long jarg1);
  public final static native long new_Feature_set();
  public final static native void Feature_set_begin_parallel_additions(long jarg1, Feature_set jarg1_);
  public final static native void Feature_set_end_parallel_additions(long jarg1, Feature_set jarg1_);
  public final static native void Feature_set_clear(long jarg1, Feature_set jarg1_);
  public final static native int Feature_set_size(long jarg1, Feature_set jarg1_);
  public final static native long Feature_set_get(long jarg1, Feature_set jarg1_, int jarg2);
  public final static native boolean Feature_set_remove(long jarg1, Feature_set jarg1_, long jarg2, Feature jarg2_);
  public final static native void delete_Feature_set(long jarg1);
  public final static native long new_Point_set_neighbor_query();
  public final static native void delete_Point_set_neighbor_query(long jarg1);
  public final static native long new_Point_set_neighborhood(long jarg1);
  public final static native long Point_set_neighborhood_k_neighbor_query(long jarg1, Point_set_neighborhood jarg1_, int jarg2);
  public final static native long Point_set_neighborhood_sphere_neighbor_query(long jarg1, Point_set_neighborhood jarg1_, double jarg2);
  public final static native void delete_Point_set_neighborhood(long jarg1);
  public final static native long new_Point_set_feature_generator__SWIG_0(long jarg1, Point_set_3 jarg1_, int jarg2, double jarg3);
  public final static native long new_Point_set_feature_generator__SWIG_1(long jarg1, Point_set_3 jarg1_, int jarg2);
  public final static native void Point_set_feature_generator_generate_point_based_features(long jarg1, Point_set_feature_generator jarg1_, long jarg2, Feature_set jarg2_);
  public final static native void Point_set_feature_generator_generate_normal_based_features(long jarg1, Point_set_feature_generator jarg1_, long jarg2, Feature_set jarg2_, long jarg3, Point_set_3_Vector_map jarg3_);
  public final static native void Point_set_feature_generator_generate_color_based_features(long jarg1, Point_set_feature_generator jarg1_, long jarg2, Feature_set jarg2_, long jarg3, Point_set_3_Int_map jarg3_, long jarg4, Point_set_3_Int_map jarg4_, long jarg5, Point_set_3_Int_map jarg5_);
  public final static native void Point_set_feature_generator_generate_echo_based_features(long jarg1, Point_set_feature_generator jarg1_, long jarg2, Feature_set jarg2_, long jarg3, Point_set_3_Int_map jarg3_);
  public final static native long Point_set_feature_generator_neighborhood__SWIG_0(long jarg1, Point_set_feature_generator jarg1_, int jarg2);
  public final static native long Point_set_feature_generator_neighborhood__SWIG_1(long jarg1, Point_set_feature_generator jarg1_);
  public final static native int Point_set_feature_generator_number_of_scales(long jarg1, Point_set_feature_generator jarg1_);
  public final static native double Point_set_feature_generator_grid_resolution(long jarg1, Point_set_feature_generator jarg1_, int jarg2);
  public final static native double Point_set_feature_generator_radius_neighbors(long jarg1, Point_set_feature_generator jarg1_, int jarg2);
  public final static native double Point_set_feature_generator_radius_dtm(long jarg1, Point_set_feature_generator jarg1_, int jarg2);
  public final static native void delete_Point_set_feature_generator(long jarg1);
  public final static native long new_ETHZ_Random_forest_classifier(long jarg1, Label_set jarg1_, long jarg2, Feature_set jarg2_);
  public final static native void ETHZ_Random_forest_classifier_train__SWIG_0(long jarg1, ETHZ_Random_forest_classifier jarg1_, long jarg2, Point_set_3_Int_iterator jarg2_, boolean jarg3, int jarg4, int jarg5);
  public final static native void ETHZ_Random_forest_classifier_train__SWIG_1(long jarg1, ETHZ_Random_forest_classifier jarg1_, long jarg2, Point_set_3_Int_iterator jarg2_, boolean jarg3, int jarg4);
  public final static native void ETHZ_Random_forest_classifier_train__SWIG_2(long jarg1, ETHZ_Random_forest_classifier jarg1_, long jarg2, Point_set_3_Int_iterator jarg2_, boolean jarg3);
  public final static native void ETHZ_Random_forest_classifier_train__SWIG_3(long jarg1, ETHZ_Random_forest_classifier jarg1_, long jarg2, Point_set_3_Int_iterator jarg2_);
  public final static native void ETHZ_Random_forest_classifier_save_configuration(long jarg1, ETHZ_Random_forest_classifier jarg1_, String jarg2);
  public final static native void ETHZ_Random_forest_classifier_load_configuration(long jarg1, ETHZ_Random_forest_classifier jarg1_, String jarg2);
  public final static native void delete_ETHZ_Random_forest_classifier(long jarg1);
  public final static native long new_Evaluation(long jarg1, Label_set jarg1_, long jarg2, Point_set_3_Int_iterator jarg2_, long jarg3, Point_set_3_Int_iterator jarg3_);
  public final static native double Evaluation_precision(long jarg1, Evaluation jarg1_, long jarg2, Label jarg2_);
  public final static native double Evaluation_recall(long jarg1, Evaluation jarg1_, long jarg2, Label jarg2_);
  public final static native double Evaluation_f1_score(long jarg1, Evaluation jarg1_, long jarg2, Label jarg2_);
  public final static native double Evaluation_intersection_over_union(long jarg1, Evaluation jarg1_, long jarg2, Label jarg2_);
  public final static native double Evaluation_accuracy(long jarg1, Evaluation jarg1_);
  public final static native double Evaluation_mean_f1_score(long jarg1, Evaluation jarg1_);
  public final static native double Evaluation_mean_intersection_over_union(long jarg1, Evaluation jarg1_);
  public final static native void delete_Evaluation(long jarg1);
  public final static native void classify(long jarg1, Point_set_3 jarg1_, long jarg2, Label_set jarg2_, long jarg3, ETHZ_Random_forest_classifier jarg3_, long jarg4, Point_set_3_Int_map jarg4_);
  public final static native void classify_with_local_smoothing(long jarg1, Point_set_3 jarg1_, long jarg2, Label_set jarg2_, long jarg3, ETHZ_Random_forest_classifier jarg3_, long jarg4, Point_set_neighbor_query jarg4_, long jarg5, Point_set_3_Int_map jarg5_);
  public final static native void classify_with_graphcut(long jarg1, Point_set_3 jarg1_, long jarg2, Label_set jarg2_, long jarg3, ETHZ_Random_forest_classifier jarg3_, long jarg4, Point_set_neighbor_query jarg4_, double jarg5, int jarg6, long jarg7, Point_set_3_Int_map jarg7_);
}
